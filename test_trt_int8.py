#!/usr/bin/env python3
# Template auto-generated by polygraphy [v0.33.2] on 02/17/22 at 22:10:21
# Generation Command: /root/miniconda3/envs/pyt1-10-2/bin/polygraphy run quant_fullmodel.onnx --trt --workspace 600000000 --int8 --gen-script test_trt.py
# This script runs /objdet/second.pytorch/quant_fullmodel.onnx using TensorRT.

from polygraphy.logger import G_LOGGER

from polygraphy.backend.trt import CreateConfig as CreateTrtConfig, EngineFromNetwork, NetworkFromOnnxPath, TrtRunner
from polygraphy.comparator import Comparator
from polygraphy.comparator.data_loader import DataLoader

import sys

# Loaders
parse_network_from_onnx = NetworkFromOnnxPath('./resnet50_quant.onnx')
create_trt_config = CreateTrtConfig(max_workspace_size=100000000, int8=True)
build_engine = EngineFromNetwork(parse_network_from_onnx, config=create_trt_config)

# Runners
runners = [
    TrtRunner(build_engine),
]

loader = DataLoader(iterations =5)

# Runner Execution
results = Comparator.run(runners,data_loader=loader)

for runs in results[0][1]:
    print(str(runs.runtime * 1000) + " ms")
success = True
# Report Results
cmd_run = ' '.join(sys.argv)
if not success:
    G_LOGGER.critical("FAILED | Command: {}".format(cmd_run))
G_LOGGER.finish("PASSED | Command: {}".format(cmd_run))

